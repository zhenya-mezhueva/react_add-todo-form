{"version":3,"sources":["components/User.js","types.js","components/Todo.js","components/TodoList.js","api/users.js","App.js","api/todos.js","index.js"],"names":["User","PropTypes","arrayOf","shape","id","number","isRequired","string","bool","user","className","Todo","title","completed","TodoList","todos","map","todo","key","defaultProps","users","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","getUserById","userId","find","preparedTodos","App","state","todoList","todoName","error","errMes","showError","setState","handleError","addTodo","event","preventDefault","setTimeout","lastId","length","newTodo","handleNameChange","target","value","handleTaskChange","this","action","method","onSubmit","htmlFor","onChange","type","placeholder","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b2665bc.chunk.js","sourcesContent":["import React from 'react';\nimport { TypeUser } from '../types';\nimport './todo.scss';\n\nconst User = ({ user }) => (\n  <span className=\"todo__user-name\">{user}</span>\n);\n\nUser.propTypes = TypeUser;\n\nexport default User;\n","import PropTypes from 'prop-types';\n\nexport const TypeTodoList = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport const TypeTodoItem = {\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n\nexport const TypeUser = {\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport User from './User';\nimport './todo.scss';\nimport { TypeTodoItem } from '../types';\n\nconst Todo = ({ title, completed, user }) => (\n  <li>\n    <span className=\"todo__item\">\n      <span className=\"todo__item-title\">ToDo: </span>\n      {title}\n    </span>\n    <br />\n    <span className=\"todo__item-title\">\n      Status:\n    </span>\n    {completed\n      ? ' finished'\n      : ' not finished'}\n    <br />\n    <span className=\"todo__item-title\">\n      User:\n    </span>\n    {' '}\n    <User user={user} />\n    <hr />\n  </li>\n);\n\nTodo.propTypes = TypeTodoItem;\n\nexport default Todo;\n","import React from 'react';\nimport { TypeTodoList } from '../types';\nimport Todo from './Todo';\nimport '../App.scss';\n\nconst TodoList = ({ todos }) => (\n  <ul className=\"todo__list\">\n    {todos.map(todo => (\n      <Todo {...todo} key={todo.id} />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = TypeTodoList;\n\nTodoList.defaultProps = {\n  todos: [],\n};\n\nexport default TodoList;\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './App.scss';\nimport TodoList from './components/TodoList';\n\nimport todos from './api/todos';\nimport users from './api/users';\n\nconst getUserById = userId => users.find(user => user.id === userId);\nconst preparedTodos = todos\n  .map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId).name,\n  }));\n\nclass App extends React.Component {\n  state = {\n    todoList: preparedTodos,\n    todoName: '',\n    userId: 0,\n    error: false,\n    errMes: '',\n  }\n\n  showError = () => {\n    this.setState({ error: true });\n  }\n\n  handleError = () => {\n    if (!this.state.todoName) {\n      this.setState({ errMes: 'Input the task! ' });\n    }\n\n    if (!this.state.userId) {\n      this.setState({\n        errMes: 'Select the user!',\n      });\n    }\n  }\n\n  addTodo = (event) => {\n    event.preventDefault();\n    if (!this.state.todoName || !this.state.userId) {\n      this.handleError();\n\n      this.showError();\n      setTimeout(() => (\n        this.setState({ error: false })\n      ), 2000);\n\n      return;\n    }\n\n    this.setState((state) => {\n      const { userId, todoList } = this.state;\n      const lastId = todoList[todoList.length - 1].id;\n\n      const newTodo = {\n        title: state.todoName,\n        id: lastId + 1,\n        userId: state.userId,\n        user: getUserById(userId).name,\n      };\n\n      return ({\n        todoList: [...state.todoList, newTodo],\n        todoName: '',\n        userId: 0,\n        error: false,\n      });\n    });\n  }\n\n  handleNameChange = (event) => {\n    this.setState({ userId: +event.target.value });\n  }\n\n  handleTaskChange = (event) => {\n    this.setState({ todoName: event.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"todo__top\">\n          <h1 className=\"1\">ToDo</h1>\n        </div>\n        <main className=\"todo__content\">\n          <div className=\"todo__sidebar\">\n            <div className=\"todo__info\">\n              <span>\n                Tasks:&nbsp;\n                {this.state.todoList.length}\n              </span>\n              <br />\n              <span>\n                Users:&nbsp;\n                {users.length}\n              </span>\n            </div>\n            <div className=\"add_todo\">\n              <h3>Add new task</h3>\n              <form\n                action=\"#\"\n                method=\"POST\"\n                onSubmit={this.addTodo}\n              >\n                <div className=\"form-field\">\n                  <label htmlFor=\"select-user\">User&nbsp;</label>\n                  <br />\n                  <select\n                    name=\"user\"\n                    id=\"select-user\"\n                    className=\"select-field\"\n                    value={this.state.userId}\n                    onChange={this.handleNameChange}\n                  >\n                    <option value=\"0\">\n                      Select User\n                    </option>\n                    {\n                      users.map(user => (\n                        <option\n                          value={user.id}\n                          key={user.id}\n                        >\n                          {user.name}\n                        </option>\n                      ))\n                    }\n                  </select>\n                </div>\n                <div className=\"form-field\">\n                  <label htmlFor=\"new-todo-name\">New task&nbsp;</label>\n                  <br />\n                  <input\n                    id=\"new-todo-name\"\n                    type=\"text\"\n                    name=\"todoName\"\n                    className=\"input-text\"\n                    placeholder=\"Enter the task\"\n                    value={this.state.todoName}\n                    onChange={this.handleTaskChange}\n                  />\n                  <br />\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={this.addTodo}\n                  className=\"btn\"\n                >\n                  Add\n                </button>\n              </form>\n              <p className=\"notification\">\n                {this.state.error && <p className=\"err\">{this.state.errMes}</p>}\n              </p>\n            </div>\n          </div>\n          <TodoList todos={this.state.todoList} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}